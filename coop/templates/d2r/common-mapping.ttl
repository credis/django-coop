{% include "d2r/prefix.ttl"%}


<> a d2r:Server;
    rdfs:label "{{d2r_site_name}}";
    d2r:port {{d2r_port}};
    d2r:baseURI <{{d2r_baseURI}}>;
    d2r:autoReloadMapping true;
    d2r:limitPerClassMap false;   # to display everything within the interfac, default is 50
    .

map:database a d2rq:Database;
    d2rq:jdbcDriver "org.postgresql.Driver";
    d2rq:jdbcDSN "jdbc:postgresql://{{d2rq_db_host}}:{{d2rq_db_port}}/{{d2rq_db_name}}";
    d2rq:username "{{d2rq_username}}";
    d2rq:password "{{d2rq_password}}";
   .

# Table coop_cms_navtree
map:scheme a d2rq:ClassMap; # classe = modele Django
    d2rq:dataStorage map:database;
    d2rq:uriPattern "scheme/@@coop_cms_navtree.id@@/";
    d2rq:class skos:Scheme; # classe RDF correspondante
    d2rq:condition "coop_cms_navtree.name <> 'default'"
    .
    
map:scheme_name a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:scheme;
    d2rq:property rdfs:label;
    d2rq:column "coop_cms_navtree.name";
    d2rq:lang "fr"  
    .
    
# Table coop_tag_ctag
map:xlabel a d2rq:ClassMap;
    d2rq:dataStorage map:database;
    {% if mode == 'view' %}
    d2rq:uriPattern "ctag/@@coop_tag_ctag.slug@@/";
    {% else %}
    d2rq:uriColumn "coop_tag_ctag.uri";
    {% endif %}
    d2rq:class skosxl:Label;
    .
map:xlabel_name a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:xlabel;
    d2rq:property skosxl:literalForm;
    d2rq:property rdfs:label;
    d2rq:column "coop_tag_ctag.name";
    d2rq:lang "fr"
    .
map:xlabel_author_uri a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:xlabel;
    d2rq:property foaf:made;
    d2rq:column "coop_tag_ctag.person_uri";
    .
map:xlabel_created a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:xlabel;
    d2rq:property dct:created;
    d2rq:column "coop_tag_ctag.created";
    d2rq:datatype xsd:dateTime;
    .
map:xlabel_modified a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:xlabel;
    d2rq:property dct:modified;
    d2rq:column "coop_tag_ctag.modified";
    d2rq:datatype xsd:dateTime;
    .
map:xlabel_inscheme a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:xlabel;
    d2rq:refersToClassMap map:scheme;
    d2rq:property skos:inScheme;
    d2rq:join "coop_tag_ctag.id <= coop_cms_navnode.object_id";
    d2rq:join "django_content_type.id <= coop_cms_navnode.content_type_id";
    d2rq:condition "django_content_type.model = 'ctag'";
    d2rq:join "coop_cms_navtree.id <= coop_cms_navnode.tree_id";
    .
map:xlabel_broader a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:xlabel;
    d2rq:refersToClassMap map:xlabel;
    d2rq:property ess:broaderLabel;
    d2rq:alias "coop_tag_ctag AS subject_tag";
    d2rq:alias "coop_cms_navnode AS subject_node";
    d2rq:join "coop_tag_ctag.id <= coop_cms_navnode.object_id";
    d2rq:join "django_content_type.id <= coop_cms_navnode.content_type_id";
    d2rq:condition "django_content_type.model = 'ctag'";
    d2rq:join "subject_node.id <= coop_cms_navnode.parent_id";
    d2rq:join "subject_node.object_id => subject_tag.id"; 
    # they are on the same scheme
    d2rq:join "subject_node.tree_id = coop_cms_navnode.tree_id"; 
    .



{% include "d2r/organization.ttl" %}

{% include "d2r/exchange.ttl" %}

{% include "d2r/contact.ttl" %}





# Table coop_local_role
map:role a d2rq:ClassMap;
    d2rq:dataStorage map:database;
    {% if mode == 'view' %}
    d2rq:uriPattern "role/@@coop_local_role.slug@@";
    {% else %}
    d2rq:uriColumn "coop_local_role.uri";
    {% endif %}
    d2rq:class org:Role;
    d2rq:classDefinitionLabel "coop_local_role";
    .
map:role_label a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:role;
    d2rq:property skos:label;
    d2rq:column "coop_local_role.label";
    .


# Définition basée sur la table Person
map:person a d2rq:ClassMap;
    d2rq:dataStorage map:database;
{% if mode == 'view' %}
    d2rq:uriPattern "person/@@coop_local_person.id@@/"; # URI == ID
{% else %}
    d2rq:uriColumn "coop_local_person.uri";
{% endif %}
    #d2rq:class foaf:Person;    # redundancy person:Person subclass of foaf:Person and schema:Person
    d2rq:class person:Person;
    .
map:person_last_name a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:person;
    d2rq:property foaf:familyName;      
    # d2rq:property schema:familyName;       # useless for our purpose
    d2rq:column "coop_local_person.last_name"; # la valeur est là
    .
map:person_first_name a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:person;
    d2rq:property foaf:givenName;          
    # d2rq:property schema:givenName;         # useless for our purpose
   d2rq:column "coop_local_person.first_name";
    .
map:person__label a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:person;
    d2rq:property rdfs:label;
    d2rq:property foaf:name;            
    # d2rq:property schema:name;             # useless for our purpos
    d2rq:pattern "@@coop_local_person.first_name@@ @@coop_local_person.last_name@@";
    .
# map:person_email a d2rq:PropertyBridge;
#   d2rq:belongsToClassMap map:person;
#   d2rq:property foaf:mbox;
#   d2rq:column "coop_local_person.email";
#   .
map:person_email a d2rq:PropertyBridge;
  d2rq:belongsToClassMap map:person;
  d2rq:property foaf:mbox_sha1sum;
  d2rq:column "coop_local_person.email_sha1";
  .
map:person_created a d2rq:PropertyBridge;
  d2rq:belongsToClassMap map:person;
  d2rq:property dct:created;
  d2rq:column "coop_local_person.created";
  d2rq:datatype xsd:dateTime;
  .
map:person_modified a d2rq:PropertyBridge;
  d2rq:belongsToClassMap map:person;
  d2rq:property dct:modified;
  d2rq:column "coop_local_person.modified";
  d2rq:datatype xsd:dateTime;
  .


# Table coop_local_engagement
map:engagement a d2rq:ClassMap;
    d2rq:dataStorage map:database;
{% if mode == 'view' %}
    d2rq:uriPattern "engagement/@@coop_local_engagement.id@@/"; # URI == ID
{% else %}
    d2rq:uriColumn "coop_local_engagement.uri";
{% endif %}
    d2rq:class org:Membership;
    .   
map:engagement__label a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:engagement;
    d2rq:property rdfs:label;
    d2rq:pattern "Engagement n°@@coop_local_engagement.id@@";
    .
map:engagement_created a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:engagement;
    d2rq:property dct:created;
    d2rq:column "coop_local_engagement.created";
    d2rq:datatype xsd:dateTime;
    .
map:engagement_modified a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:engagement;
    d2rq:property dct:modified;
    d2rq:column "coop_local_engagement.modified";
    d2rq:datatype xsd:dateTime;
    .
map:engagement_membre a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:engagement;
    d2rq:property org:member;
    d2rq:refersToClassMap map:person;
    d2rq:join "coop_local_engagement.person_id => coop_local_person.id";
    .
map:engagement_organization a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:engagement;
    d2rq:property org:organization;
    d2rq:refersToClassMap map:organization;
    d2rq:join "coop_local_engagement.organization_id => coop_local_organization.id";
    .
map:engagement_role a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:engagement;
    d2rq:property org:role;
    d2rq:refersToClassMap map:role;
    d2rq:join "coop_local_engagement.role_id => coop_local_role.id";
    .


# Table django_comments    To be finished
map:comment a d2rq:ClassMap;
    d2rq:dataStorage map:database;
    d2rq:uriPattern "comment/@@django_comments.id@@";
    d2rq:class sioc:Item;
    d2rq:classDefinitionLabel "django_comments";
    .

map:comment__label a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:comment;
    d2rq:property rdfs:label;
    d2rq:pattern "Commentaire n°@@django_comments.id@@";
    .

map:comment_author a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:comment;
    d2rq:property dct:author;
    d2rq:column "django_comments.user_name";
    .
    
    

# Table coop_geo_area
map:area a d2rq:ClassMap;
    d2rq:dataStorage map:database;
    {% if mode == 'view' %}
    d2rq:uriPattern "area/@@coop_geo_area.reference@@";
    {% else %}
    d2rq:uriColumn "coop_geo_area.uri";
    {% endif %}
    d2rq:class dct:Location;
    .
map:area_departement a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:area;
    d2rq:property rdf:type;
    d2rq:constantValue insee:Departement;
    d2rq:alias "coop_geo_areatype AS areatype_dep";
    d2rq:condition "areatype_dep.txt_idx = 'DEP'";
    d2rq:join "coop_geo_area.area_type_id => areatype_dep.id";
    .
map:area_commune a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:area;
    d2rq:property rdf:type;
    d2rq:constantValue insee:Commune;
    d2rq:condition "coop_geo_areatype.txt_idx = 'COM'";
    d2rq:join "coop_geo_area.area_type_id => coop_geo_areatype.id";
    .    
map:area_label a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:area;
    d2rq:property rdfs:label;
    d2rq:column "coop_geo_area.label";
    .
map:area_reference a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:area;
    d2rq:property skos:notation;
    d2rq:column "coop_geo_area.reference";
    .
 map:area_polygon a d2rq:PropertyBridge;
   d2rq:belongsToClassMap map:area;
   d2rq:property locn:geometry;
   d2rq:sqlExpression "ST_AsText(coop_geo_area.polygon)";
   d2rq:datatype opens:wkt;
   .
   


# Table coop_geo_location
map:location a d2rq:ClassMap;
    d2rq:dataStorage map:database;
    {% if mode == 'view' %}
    d2rq:uriPattern "location/@@coop_geo_location.geohash@@";
    {% else %}
    d2rq:uriSqlExpression "'http://data.economie-solidaire.fr/id/location/' || coop_geo_location.geohash";
    # d2rq:uriPattern "location/@@coop_geo_location.geohash@@";   # Wainting for an anwers
    {% endif %}   
    d2rq:class dct:Location;
    .
map:location_label a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:location;
    d2rq:property rdfs:label;
    d2rq:propertyDefinitionLabel "coop_geo_location label";
    d2rq:column "coop_geo_location.label";
    .
 map:location_point a d2rq:PropertyBridge;
   d2rq:belongsToClassMap map:location;
   d2rq:property locn:geometry;
   d2rq:sqlExpression "ST_AsText(coop_geo_location.point)";
   d2rq:datatype opens:wkt;
   .
 map:location_addr a d2rq:PropertyBridge;
   d2rq:belongsToClassMap map:location;
   d2rq:property locn:address;
   d2rq:refersToClassMap  map:addr;
   .   
map:location_created a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:location;
    d2rq:property dct:created;
    d2rq:column "coop_geo_location.created";
    d2rq:datatype xsd:dateTime;
    .
map:location_modified a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:location;
    d2rq:property dct:modified;
    d2rq:column "coop_geo_location.modified";
    d2rq:datatype xsd:dateTime;
    .

# map:location_owner_id a d2rq:PropertyBridge;
#   d2rq:belongsToClassMap map:location;
#   d2rq:property vocab:coop_geo_location_owner_id;
#   d2rq:refersToClassMap map:auth_user;
#   d2rq:join "coop_geo_location.owner_id => auth_user.id";
#   .
# map:location_area_id a d2rq:PropertyBridge;
#   d2rq:belongsToClassMap map:location;
#   d2rq:property vocab:coop_geo_location_area_id;
#   d2rq:refersToClassMap map:coop_geo_area;
#   d2rq:join "coop_geo_location.area_id => coop_geo_area.id";
#   .



# Table coop_geo_location is used to build addresses
map:addr a d2rq:ClassMap;
    d2rq:dataStorage map:database;
    {% if mode == 'view' %}
    d2rq:uriPattern "coop_geo_addr/@@coop_geo_location.uuid@@";
    {% else %}
    d2rq:uriColumn "coop_geo_location.uri";
    {% endif %}
    d2rq:class locn:Address;
    .

map:addr_fulladdr a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:addr;
    d2rq:property locn:fullAddress;
    d2rq:property rdfs:label;
    d2rq:pattern "@@coop_geo_location.adr1@@ @@coop_geo_location.adr2@@  @@coop_geo_location.zipcode@@ @@coop_geo_location.city@@";
    .
map:addr_adr1 a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:addr;
    d2rq:property locn:thoroughfare;
    d2rq:column "coop_geo_location.adr1";
    d2rq:condition "coop_geo_location.adr1 <> ''";
    .
map:addr_adr2 a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:addr;
    d2rq:property locn:locatorName;
    d2rq:column "coop_geo_location.adr2";
    d2rq:condition "coop_geo_location.adr2 <> ''";
    .
map:addr_zipcode a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:addr;
    d2rq:property locn:postCode;
    d2rq:column "coop_geo_location.zipcode";
    .
map:addr_city a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:addr;
    d2rq:property locn:postName;
    d2rq:column "coop_geo_location.city";
    .
{% block mappings %}
{% endblock %}
